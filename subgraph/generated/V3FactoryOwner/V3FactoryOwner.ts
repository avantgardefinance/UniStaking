// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminSet extends ethereum.Event {
  get params(): AdminSet__Params {
    return new AdminSet__Params(this);
  }
}

export class AdminSet__Params {
  _event: AdminSet;

  constructor(event: AdminSet) {
    this._event = event;
  }

  get oldAmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeesClaimed extends ethereum.Event {
  get params(): FeesClaimed__Params {
    return new FeesClaimed__Params(this);
  }
}

export class FeesClaimed__Params {
  _event: FeesClaimed;

  constructor(event: FeesClaimed) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount0(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class V3FactoryOwner extends ethereum.SmartContract {
  static bind(address: Address): V3FactoryOwner {
    return new V3FactoryOwner("V3FactoryOwner", address);
  }

  FACTORY(): Address {
    let result = super.call("FACTORY", "FACTORY():(address)", []);

    return result[0].toAddress();
  }

  try_FACTORY(): ethereum.CallResult<Address> {
    let result = super.tryCall("FACTORY", "FACTORY():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  PAYOUT_AMOUNT(): BigInt {
    let result = super.call("PAYOUT_AMOUNT", "PAYOUT_AMOUNT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PAYOUT_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PAYOUT_AMOUNT",
      "PAYOUT_AMOUNT():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PAYOUT_TOKEN(): Address {
    let result = super.call("PAYOUT_TOKEN", "PAYOUT_TOKEN():(address)", []);

    return result[0].toAddress();
  }

  try_PAYOUT_TOKEN(): ethereum.CallResult<Address> {
    let result = super.tryCall("PAYOUT_TOKEN", "PAYOUT_TOKEN():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  REWARD_RECEIVER(): Address {
    let result = super.call(
      "REWARD_RECEIVER",
      "REWARD_RECEIVER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_REWARD_RECEIVER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "REWARD_RECEIVER",
      "REWARD_RECEIVER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _payoutToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _payoutAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _rewardReceiver(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimFeesCall extends ethereum.Call {
  get inputs(): ClaimFeesCall__Inputs {
    return new ClaimFeesCall__Inputs(this);
  }

  get outputs(): ClaimFeesCall__Outputs {
    return new ClaimFeesCall__Outputs(this);
  }
}

export class ClaimFeesCall__Inputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount0Requested(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _amount1Requested(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ClaimFeesCall__Outputs {
  _call: ClaimFeesCall;

  constructor(call: ClaimFeesCall) {
    this._call = call;
  }
}

export class EnableFeeAmountCall extends ethereum.Call {
  get inputs(): EnableFeeAmountCall__Inputs {
    return new EnableFeeAmountCall__Inputs(this);
  }

  get outputs(): EnableFeeAmountCall__Outputs {
    return new EnableFeeAmountCall__Outputs(this);
  }
}

export class EnableFeeAmountCall__Inputs {
  _call: EnableFeeAmountCall;

  constructor(call: EnableFeeAmountCall) {
    this._call = call;
  }

  get _fee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _tickSpacing(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class EnableFeeAmountCall__Outputs {
  _call: EnableFeeAmountCall;

  constructor(call: EnableFeeAmountCall) {
    this._call = call;
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get _newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetFeeProtocolCall extends ethereum.Call {
  get inputs(): SetFeeProtocolCall__Inputs {
    return new SetFeeProtocolCall__Inputs(this);
  }

  get outputs(): SetFeeProtocolCall__Outputs {
    return new SetFeeProtocolCall__Outputs(this);
  }
}

export class SetFeeProtocolCall__Inputs {
  _call: SetFeeProtocolCall;

  constructor(call: SetFeeProtocolCall) {
    this._call = call;
  }

  get _pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeProtocol0(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _feeProtocol1(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetFeeProtocolCall__Outputs {
  _call: SetFeeProtocolCall;

  constructor(call: SetFeeProtocolCall) {
    this._call = call;
  }
}

export class TransferFactoryOwnershipCall extends ethereum.Call {
  get inputs(): TransferFactoryOwnershipCall__Inputs {
    return new TransferFactoryOwnershipCall__Inputs(this);
  }

  get outputs(): TransferFactoryOwnershipCall__Outputs {
    return new TransferFactoryOwnershipCall__Outputs(this);
  }
}

export class TransferFactoryOwnershipCall__Inputs {
  _call: TransferFactoryOwnershipCall;

  constructor(call: TransferFactoryOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferFactoryOwnershipCall__Outputs {
  _call: TransferFactoryOwnershipCall;

  constructor(call: TransferFactoryOwnershipCall) {
    this._call = call;
  }
}
