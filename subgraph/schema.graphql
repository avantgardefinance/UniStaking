# Events

interface Event {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

interface DepositEvent {
  id: Bytes!
  depositId: BigInt!
  deposit: Deposit!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

interface RewardEvent {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BeneficiaryAltered implements Event & DepositEvent
  @entity(immutable: true) {
  id: Bytes!
  depositId: BigInt!
  deposit: Deposit!
  oldBeneficiary: Bytes!
  newBeneficiary: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegateeAltered implements Event & DepositEvent @entity(immutable: true) {
  id: Bytes!
  depositId: BigInt!
  deposit: Deposit!
  oldDelegatee: Bytes!
  newDelegatee: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardClaimed implements Event & RewardEvent @entity(immutable: true) {
  id: Bytes!
  beneficiary: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardNotified implements Event & RewardEvent @entity(immutable: true) {
  id: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeDeposited implements Event & DepositEvent @entity(immutable: true) {
  id: Bytes!
  depositId: BigInt!
  deposit: Deposit!
  amount: BigInt!
  totalDeposited: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeWithdrawn implements Event & DepositEvent @entity(immutable: true) {
  id: Bytes!
  depositId: BigInt!
  deposit: Deposit!
  amount: BigInt!
  remainingAmount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SurrogateDeployed implements Event @entity(immutable: true) {
  id: Bytes!
  delegatee: Bytes!
  surrogate: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# Deposit

type Deposit @entity {
  id: String! # depositId (BigInt converted to String)
  createdAt: Int!
  updatedAt: Int!
  owner: Account!
  delegatee: Account!
  beneficiary: Account!
  amount: BigInt!

  events: [DepositEvent!]! @derivedFrom(field: "deposit")
}

# Surrogate

type Surrogate @entity {
  id: Bytes!
  createdAt: Int!
  delegatee: Account!
}

# Account

type Account @entity {
  id: Bytes!
  createdAt: Int!
  claimedRewards: BigInt!

  ownerships: [Deposit!]! @derivedFrom(field: "owner")
  delegateeships: [Deposit!]! @derivedFrom(field: "delegatee")
  beneficiaryships: [Deposit!]! @derivedFrom(field: "beneficiary")

  delegateeSurrogates: [Surrogate!]! @derivedFrom(field: "delegatee")
}

# Uni Staker History

type UniStakerHistory @entity {
  id: String!
  timestamp: Int!

  totalStaked: BigInt!
  totalWithdrawn: BigInt!
  currentlyStaked: BigInt!

  totalRewards: BigInt!
  claimedRewards: BigInt!
}
